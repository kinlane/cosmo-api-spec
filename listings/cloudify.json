{
  "apiVersion": null,
  "swaggerVersion": "1.2",
  "basePath": "http://example.com/",
  "resourcePath": "/",
  "produces": [
    "application/json",
    "text/plain",
    "text/html"
  ],
  "apis": [
    {
      "path": "/blueprints",
      "operations": [
        {
          "method": "POST",
          "summary": "Upload a new blueprint to Cloudify",
          "notes": "Creates a new blueprint. Even if a blueprint with the same data already exists. To update an existing blueprint, use the PUT method",
          "responseClass": "BlueprintState",
          "nickname": "upload",
          "parameters": [
            {
              "name": "body",
              "description": "blueprint object that needs to be added. YAML.",
              "required": true,
              "allowMultiple": false,
              "dataType": "Blueprint",
              "paramType": "body"
            }
          ],
          "responseMessages": [
            {
              "code": 201,
              "message": "Created. The URL of the created blueprint should be in the Location header"
            },
            {
              "code": 405,
              "message": "Invalid input"
            }
          ]
        },
        {
          "method": "GET",
          "summary": "Lists all blueprints",
          "notes": "Returns just the short version of the blueprints, not all the data",
          "responseClass": "List[BlueprintState]",
          "nickname": "list"
        }
      ]
    },
    {
      "path": "/blueprint/{id}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get blueprint by ID",
          "notes": "Returns a blueprint based on ID",
          "responseClass": "BlueprintState",
          "nickname": "getById",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "description": "ID of blueprint that needs to be fetched",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "blueprint not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "summary": "Deletes a blueprint.",
          "notes": "Actually archives it, blueprints are never really deleted. For safety.",
          "responseClass": "void",
          "nickname": "delete",
          "parameters": [
            {
              "name": "id",
              "description": "BlueprintState id to delete",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "blueprint not found"
            }
          ]
        },
        {
          "method": "PUT",
          "summary": "Update an existing blueprint. Completely replaces the data for the blueprint with the newly sent data",
          "notes": "",
          "responseClass": "BlueprintState",
          "nickname": "update",
          "parameters": [
            {
              "name": "id",
              "description": "BlueprintState id to update",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            },
            {
              "name": "body",
              "description": "Blueprint object that needs to be updated.",
              "required": true,
              "allowMultiple": false,
              "dataType": "Blueprint",
              "paramType": "body"
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid ID supplied"
            },
            {
              "code": 404,
              "message": "Blueprint not found"
            },
            {
              "code": 405,
              "message": "Validation exception"
            }
          ]
        },
        {
          "method": "PATCH",
          "summary": "Update in-place of an existing blueprint. Replaces only the specified yml attributes. Will not update unspecified attributes",
          "notes": "",
          "responseClass": "BlueprintState",
          "nickname": "patch",
          "parameters": [
            {
              "name": "id",
              "description": "BlueprintState id to update",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            },
            {
              "name": "body",
              "description": "Blueprint object that needs to be updated.",
              "required": true,
              "allowMultiple": false,
              "dataType": "Blueprint",
              "paramType": "body"
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "blueprint not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/blueprints/find/?q={q}",
      "operations": [
        {
          "method": "GET",
          "summary": "Find blueprints by its attributes",
          "responseClass": "List[BlueprintState]",
          "nickname": "find",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "q",
              "description": "A blueprint query string. DSL TBD",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/blueprint/{id}/executions",
      "operations": [
        {
          "method": "POST",
          "summary": "Run a blueprint",
          "responseClass": "Execution",
          "nickname": "run",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "description": "ID of the blueprint to run",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 201,
              "message": "Created. The URL of the execution is in the Location header"
            },
            {
              "code": 404,
              "message": "Deployment not found"
            }
          ]
        },
        {
          "method": "GET",
          "summary": "Get a list of all executions of this blueprint",
          "responseClass": "List[Execution]",
          "nickname": "",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "description": "ID of blueprint that needs to be fetched",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "blueprint not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/executions",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a list of all executions",
          "responseClass": "List[Execution]",
          "nickname": "list",
          "produces": ["application/json"]
        }
      ]
    },
    {
      "path": "/execution/{id}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get an execution by ID",
          "responseClass": "Execution",
          "nickname": "get",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "description": "ID of the execution that needs to be fetched",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ]
        },
        {
          "method": "HEAD",
          "summary": "Get just the headers of an execution",
          "notes": "Useful for polling for state. Look in the headers x-status etc to get the status",
          "responseClass": "void",
          "nickname": "head",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "description": "ID of the execution that needs to be fetched",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/execution/{id}/abort",
      "operations": [
        {
          "method": "POST",
          "summary": "Abort an execution",
          "responseClass": "Execution",
          "nickname": "abort",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "description": "ID of the execution that needs to be fetched",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/execution/{id}/logs",
      "operations": [
        {
          "method": "GET",
          "summary": "Get all logs of the execution",
          "responseClass": "ExecutionLogs",
          "nickname": "logs",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "description": "ID of execution that needs to be fetched",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Execution not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/executions/find/?q={q}",
      "operations": [
        {
          "method": "GET",
          "summary": "Find executions by attributes",
          "responseClass": "List[Execution]",
          "nickname": "find",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "q",
              "description": "An execution query string. DSL TBD",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/blueprint/{id}/deployments",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a list of all deployments of this blueprint",
          "responseClass": "List[Deployment]",
          "nickname": "",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "description": "ID of blueprint that needs to be fetched",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "blueprint not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/deployment/{id}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a deployment by ID",
          "notes": "Returns a deployment based on it's ID. A deployment is a running instnace of a blueprint",
          "responseClass": "Deployment",
          "nickname": "getById",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "description": "ID of deployment that needs to be fetched",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Deployment not found"
            }
          ]
        },
        {
          "method": "POST",
          "summary": "Uninstall a deployment",
          "note": "Returns an execution instance that can further be queried for status",
          "responseClass": "Execution",
          "nickname": "uninstall",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "description": "ID of deployment that needs to be uninstalled",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Deployment not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/deployment/{id}/logs",
      "operations": [
        {
          "method": "GET",
          "summary": "Get all logs of the deployment",
          "responseClass": "DeploymentLogs",
          "nickname": "logs",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "description": "ID of deployment that needs to be fetched",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Deployment not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/deploments/find/?q={q}",
      "operations": [
        {
          "method": "GET",
          "summary": "Find deployments by its attributes",
          "responseClass": "List[Deployment]",
          "nickname": "find",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "q",
              "description": "A deployment query string. DSL TBD",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/node/{id}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a node by ID",
          "responseClass": "Node",
          "nickname": "get",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "description": "ID of the node",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Node not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/node/{id}/logs",
      "operations": [
        {
          "method": "GET",
          "summary": "Get logs from the node",
          "responseClass": "NodeLogs",
          "nickname": "logs",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "description": "ID of node that needs to be fetched",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Node not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/nodes/find/?q={q}",
      "operations": [
        {
          "method": "GET",
          "summary": "Find nodes by attributes",
          "responseClass": "List[Node]",
          "nickname": "find",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "q",
              "description": "A node query string. DSL TBD",
              "required": true,
              "allowMultiple": false,
              "dataType": "string",
              "paramType": "path"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "Blueprint": {
      "id": "Blueprint",
      "description": "A blueprint is a definition of cloudify workflows",
      "required": ["yml"],
      "properties": {
        "yml": {
          "type": "string",
          "description": "The YAML definition of the blueprint"
        }
      }
    },
    "BlueprintState": {
      "id": "BlueprintState",
      "description": "A blueprint's runtime state, incl it's deployments",
      "required": ["id", "yml"],
      "properties": {
        "id": {
          "type": "string"
        },
        "yml": {
          "type": "string",
          "description": "The raw YAML definition of the blueprint"
        },
        "createdAt": {
          "type": "dateTime"
        },
        "updatedAt": {
          "type": "dateTime"
        },
        "topology": {"type": "Topology"},
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "Deployment"
          }
        }
      }
    },
    "Topology": {
      "id": "Topology",
      "description": "A topology is a definition of a set of nodes, such as hosts",
      "required": ["id"],
      "properties": {
        "id": {
          "type": "string"
        },
        "nodes": {
          "type": "array",
          "items": {"$ref": "Node"}
        }
      }
    },
    "Node": {
      "id": "Node",
      "description": "A node is a single item in a topology, such as a host",
      "required": ["id"],
      "properties": {
        "id": {"type": "string"},
        "name": {"type": "string"},
        "type": {"type": "string"},
        "baseType": {"type": "string"},
        "requiredInstances": {"type": "integer"},
        "TODO: more things here...": {"type": "string"},
        "relationships": {
          "type": "array",
          "items": {"$ref": "Relationship"}
        },
        "deploymentIds": {
          "type": "array",
          "items": {"type": "string"}
        }
      }
    },
    "Execution": {
      "id": "Execution",
      "description": "Execution is a run of a blueprint",
      "required": ["id"],
      "properties": {
        "id": {"type": "string"},
        "status": {"type": "string"},
        "deploymentId": {"type": "string"},
        "blueprintId": {"type": "string"}
      }
    },
    "Deployment": {
      "id": "Deployment",
      "description": "A deployment is a the runtime entity described by a Blueprint",
      "required": [
        "blueprint"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "dateTime"
        },
        "updatedAt": {
          "type": "dateTime"
        },
        "blueprintId": {
          "type": "string",
          "description": "The blueprint ID that created this deployment"
        }
      }
    }
  }
}